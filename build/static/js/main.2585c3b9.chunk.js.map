{"version":3,"sources":["reducers/notificationReducer.js","hooks/index.js","services/blogs.js","reducers/blogsReducer.js","components/Blog/CreateBlogForm.js","components/Blog/Blogs.js","components/Blog/FullBlog.js","components/User/UserBlogs.js","services/login.js","reducers/userReducer.js","components/Authentication/Login.js","components/User/Users.js","components/Authentication/Logout.js","components/Navbar/Navbar.js","components/Notification/Notification.js","services/users.js","components/Authentication/register/RegisterForm.js","components/Authentication/register/index.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["timerID","useField","type","useState","value","setValue","input","onChange","event","target","reset","baseUrl","token","setAuthHeader","headers","Authorization","getAll","a","axios","get","resonse","data","getBlog","id","response","createBlog","blog","config","post","setToken","newToken","like","likeOnly","put","likes","deleteBlog","delete","createComment","content","initialMessage","usage","message","createSuccessMessage","dispatch","clearTimeout","setTimeout","createErrorMessage","notificationReducer","state","action","createCommentAction","blogService","then","comment","catch","err","error","blogReducer","filter","map","comments","CreateBlogForm","useDispatch","title","author","url","onSubmit","preventDefault","newBlog","FormControl","TextField","margin","label","variant","Button","color","useStyles","makeStyles","columnHead","fontSize","grid","width","Blogs","blogs","classes","Grid","container","className","spacing","justify","item","lg","Typography","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","Link","RouterLink","data-cy","to","user","name","textAlign","FullBlog","blogId","useSelector","find","history","useHistory","handleLike","likeBlogAction","handleDelete","deleteBlogAction","push","submitComment","gutterBottom","startIcon","onClick","paragraph","rel","href","alignContent","direction","alignItems","List","ListItem","ListItemIcon","ListItemText","useStlyes","listItem","list","Userblogs","userId","users","Container","header","length","varaint","button","login","username","password","res","userReducer","expiryDate","addDays","Date","userWithExpiry","window","localStorage","setItem","JSON","stringify","removeItem","theme","paper","marginTop","display","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","Login","setUsername","setPassword","maxWidth","CssBaseline","Avatar","loginService","loginAction","noValidate","required","fullWidth","autoComplete","autoFocus","table","Users","menu","bottomBorder","borderBottom","Logout","React","anchorEl","setAnchorEl","toggleMenu","currentTarget","IconButton","Menu","open","Boolean","onClose","MenuItem","primary","confirm","navDisplayFlex","justifyContent","linkText","textDecoration","textTransform","displayLogout","marginLeft","appContainer","marginBottom","Navbar","AppBar","position","Toolbar","edge","aria-label","Home","aria-labelledby","link","path","Alert","props","elevation","Notification","notification","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","getAllUserData","userAndBlogCount","forEach","blogCount","getUserBlogs","getUsers","registerUser","credentials","validationSchema","yup","shape","confirmPassword","oneOf","initialValues","RegisterForm","handleSubmit","enableReinitialize","validateOnBlur","errors","touched","values","handleChange","setFieldTouched","FormHelperText","location","placeholder","helperText","onBlur","Register","dispath","userService","pathname","console","initialState","usersReducer","App","sort","b","useEffect","usersService","getItem","parse","initializeUser","blogMatch","useRouteMatch","params","userMatch","exact","UserBlogs","combinedReducers","combineReducers","blogsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2585c3b9.chunk.js","sourcesContent":["let timerID;\nconst initialMessage = {\n    usage: 'idle',\n    message: null\n};\n\nexport const createSuccessMessage = (message) => {\n    return dispatch => {\n        dispatch({\n            type: 'SUCCESS',\n            message\n        });\n        clearTimeout(timerID);\n        timerID = setTimeout(() => dispatch({\n            type: 'CLEAR'\n        }), 5000);\n    };\n};\n\nexport const createErrorMessage = (message) => {\n    return dispatch => {\n        dispatch({\n            type: 'ERROR',\n            message\n        });\n        clearTimeout(timerID);\n        timerID = setTimeout(() => dispatch({\n            type: 'CLEAR'\n        }), 5000);\n    };\n};\n\nconst notificationReducer = (state = initialMessage, action) => {\n    switch (action.type) {\n    case 'ERROR':\n        return {\n            usage: 'error',\n            message: action.message\n        };\n    case 'SUCCESS':\n        return {\n            usage: 'success',\n            message: action.message\n        };\n    case 'CLEAR':\n        return {\n            message: null\n        };\n    default:\n        return state;\n    }\n};\nexport default notificationReducer;","import { useState } from 'react';\n\n\nexport const useField = ({ type }) => {\n    const [ value, setValue ] = useState('');\n\n    const onChange = (event) => setValue(event.target.value);\n    const reset = () => setValue('');\n\n    return {\n        input: {\n            value,\n            onChange,\n            type\n        },\n        reset\n    };\n};","import axios from 'axios';\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`;\n};\n\nconst setAuthHeader = () => {\n    return {\n        headers: { Authorization: token }\n    };\n};\n\nconst getAll = async () => {\n    const resonse = await axios.get(baseUrl);\n    return resonse.data;\n};\nconst getBlog = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`);\n    return response.data;\n};\n\nconst createBlog = async blog => {\n    const config = setAuthHeader();\n    const response = await axios.post(baseUrl, blog, config);\n    return response.data;\n};\n\nconst like = async blog => {\n    const id = blog.id;\n    const config = setAuthHeader();\n    config.headers.likeOnly = 1;\n    const response = await axios.put(`${baseUrl}/${id}`, { likes: blog.likes + 1 }, config);\n    return response.data;\n};\n\nconst deleteBlog = async blog => {\n    const id = blog.id;\n    const config = setAuthHeader();\n    const response = await axios.delete(`${baseUrl}/${id}`, config);\n    return response.data;\n};\n\nconst createComment = async (content, blog) => {\n    const id = blog.id;\n    const resonse = await axios.post(`${baseUrl}/${id}/comments`, { content });\n    return resonse.data;\n};\nexport default { getAll, createBlog, setToken, like, deleteBlog, getBlog, createComment } //eslint-disable-line","import blogService from '../services/blogs';\nimport { createSuccessMessage, createErrorMessage } from './notificationReducer';\n\n\nexport const initializeBlogsAction = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll();\n        dispatch({\n            type: 'INIT',\n            data: blogs\n        });\n    };\n};\nexport const createBlogAction = blog => {\n    return dispatch => {\n        blogService.createBlog(blog)\n            .then(response => {\n                dispatch({\n                    type: 'CREATE',\n                    response\n                });\n                dispatch(createSuccessMessage(`Created New Blog ${blog.title} by ${blog.author}`));\n            })\n            .catch(err => dispatch(createErrorMessage(`Couldn't Create Blog. Title, Author and Url Fields are Required. Message: ${err.message}`)));\n    };\n};\n\nexport const likeBlogAction = blog => {\n    return dispatch => {\n        blogService.like(blog)\n            .then(() => {\n                dispatch({\n                    type: 'LIKE',\n                    id: blog.id\n                });\n                dispatch(createSuccessMessage(`Liked Blog ${blog.title}.`));\n            })\n            .catch(err => dispatch(createErrorMessage(`Couldn't Like Blog ${blog.title}. Message: ${err.response.data.error}`))            );\n    };\n};\n\nexport const deleteBlogAction = blog => {\n    return dispatch => {\n        blogService.deleteBlog(blog)\n            .then(() => {\n                dispatch({\n                    type: 'DELETE',\n                    id: blog.id\n                });\n                dispatch(createSuccessMessage(`Successfully Deleted Blog ${blog.title} by ${blog.author}`));\n            })\n            .catch(err => dispatch(createErrorMessage(`Couldn't Delete Blog ${blog.title}. Message: ${err.response.data.error}`)));\n    };\n};\n\nexport const createCommentAction = (content, blog) => {\n    return dispatch => {\n        blogService.createComment(content, blog)\n            .then((comment) => {\n                dispatch({\n                    type: 'COMMENT',\n                    comment\n                });\n                dispatch(createSuccessMessage('Successfully Created a Comment'));\n            })\n            .catch(err => dispatch(createErrorMessage(`Couldn't Comment On This Blog. Message: ${err.response.data.error}`)));\n    };\n};\n\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n    case 'INIT':\n        return action.data;\n    case 'CREATE':\n        return [...state, action.response];\n    case 'DELETE':\n        return state.filter(blog => blog.id !== action.id);\n    case 'LIKE':\n        return state.map(blog => {\n            if (blog.id === action.id) {\n                return { ...blog, likes: blog.likes + 1 };\n            } else {\n                return { ...blog };\n            }\n        });\n    case 'COMMENT':\n        return state.map(blog => {\n            if (blog.id === action.comment.blog) {\n                return { ...blog, comments: [...blog.comments, action.comment] };\n            } else {\n                return { ...blog };\n            }\n        });\n    default:\n        return state;\n    }\n};\n\nexport default blogReducer;","import React from 'react';\nimport { useField } from '../../hooks/index';\nimport { createBlogAction } from '../../reducers/blogsReducer';\nimport { useDispatch } from 'react-redux';\nimport { FormControl, TextField, Button } from '@material-ui/core';\n\nconst CreateBlogForm = () => {\n\n    const dispatch = useDispatch();\n\n    const title = useField('text');\n    const author = useField('text');\n    const url = useField('text');\n\n    const handleBlogSubmit = event => {\n        event.preventDefault();\n        const newBlog = {\n            'title': title.input.value,\n            'author': author.input.value,\n            'url': url.input.value\n        };\n        dispatch(createBlogAction(newBlog));\n\n\n        title.reset();\n        author.reset();\n        url.reset();\n    };\n\n    return (\n        <form onSubmit={handleBlogSubmit}>\n            <FormControl>\n                <TextField margin='dense' id=\"titleInput\" label=\"Title\" variant=\"outlined\" value={title.input.value} onChange={title.input.onChange} />\n                <TextField margin='dense' id=\"authorInput\" label=\"Author\" variant=\"outlined\" value={author.input.value} onChange={author.input.onChange} />\n                <TextField margin='dense' id=\"urlInput\" label=\"Link to blog\" variant=\"outlined\" value={url.input.value} onChange={url.input.onChange} />\n                <Button type='submit' variant='contained' color='primary' id='createButton'>Create New Blog</Button>\n            </FormControl>\n        </form>\n    );\n};\n\nexport default CreateBlogForm;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableCell, TableContainer, TableBody, Paper, TableRow, TableHead, Typography, Grid } from '@material-ui/core';\nimport CreateBlogForm from './CreateBlogForm';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    columnHead: {\n        fontSize: '1.4rem'\n    },\n    grid: {\n        width: '80vw',\n        margin: '0 auto'\n    }\n});\n\nconst Blogs = ({ blogs }) => {\n    const classes = useStyles();\n    return (\n        <Grid container className={classes.grid} spacing={2} justify='center'>\n            <Grid item lg={2}>\n                <Typography variant='h2' component='h2'>Create</Typography>\n                <CreateBlogForm />\n            </Grid>\n            <Grid item lg={10}>\n                <Typography variant='h2' component='h2'>\n                    Blogs\n                </Typography>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className={classes.columnHead}>Title</TableCell>\n                                <TableCell className={classes.columnHead}>User</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                blogs.map(blog => (\n                                    <TableRow key={blog.id}>\n                                        <TableCell>\n                                            <Link component={RouterLink} data-cy=\"blogLink\" to={`/blogs/${blog.id}`}>{blog.title}</Link>\n                                        </TableCell>\n                                        <TableCell>\n                                            <Link component={RouterLink} data-cy=\"blogUser\" to={`/users/${blog.user.id}`}>{blog.user.name}</Link>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </Grid>\n    );\n};\n\nBlogs.propTypes = {\n    blogs: propTypes.array.isRequired,\n};\n\nexport default Blogs;\n","import React from 'react';\nimport { likeBlogAction, deleteBlogAction, createCommentAction } from '../../reducers/blogsReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useField } from '../../hooks/index';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { Typography, Button, TextField, Grid, List, ListItem, ListItemIcon, ListItemText, FormControl } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport AddCommentIcon from '@material-ui/icons/AddComment';\n\n\nconst useStyles = makeStyles({\n    container: {\n        textAlign: 'center'\n    }\n});\n\n\nconst FullBlog = ({ blogId }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const blog = useSelector(state => state.blogs.find(blog => blog.id === blogId));\n    const comment = useField('text');\n    const history = useHistory();\n\n    const handleLike = blog => dispatch(likeBlogAction(blog));\n    const handleDelete = blog => {\n        dispatch(deleteBlogAction(blog));\n        history.push('/');\n    };\n\n    const submitComment = async (event) => {\n        event.preventDefault();\n        dispatch(createCommentAction(comment.input.value, blog));\n        comment.reset();\n    };\n    if (blog) {\n        return (\n            <Grid container className={classes.container} spacing={5} justify='center'>\n                <Grid item lg={8}>\n                    <Typography component='h2' variant='h2' gutterBottom={true}>\n                        {blog.title}\n                    </Typography>\n                    <Typography component='h4' variant='h4'>\n                        Written by {blog.author}\n                    </Typography>\n                    <Typography>\n                        <b>Likes: </b> {blog.likes}\n                    </Typography>\n                    <Typography gutterBottom={true}>\n                        <Button data-cy=\"likeButton\" variant='contained' color='primary' startIcon={<ThumbUpIcon />} onClick={() => handleLike(blog)}>Like</Button>\n                    </Typography>\n                    <Typography>\n                        <b>Added By User:</b>\n                        <Button component={RouterLink} to={`/users/${blog.user.id}`} startIcon={<PersonIcon />} variant='text' color='primary'>{blog.user.name}</Button>\n                    </Typography>\n                    <Typography variant='h6' paragraph={true}>\n                        <Link target='_blank' rel='noreferrer' href={blog.url}>View Full Blog</Link>\n                    </Typography>\n                    <Button data-cy=\"removeButton\" variant='contained' color='secondary' startIcon={<DeleteForeverIcon />} onClick={() => handleDelete(blog)}>Remove</Button>\n                </Grid>\n                <Grid container item lg={4} alignContent='center' justify='center' direction=\"column\">\n                    <Typography variant='h3' component='h3' gutterBottom={true}>\n                        Comments\n                    </Typography>\n                    <FormControl>\n                        <Grid container spacing={2} alignItems='flex-end'>\n                            <Grid item>\n                                <TextField id=\"commentField\" label=\"Add Comment\" {...{ ...comment.input }} />\n                            </Grid>\n                            <Grid item>\n                                <Button type=\"submit\" onClick={submitComment} variant='contained' color='primary' startIcon={<AddCommentIcon />}>Comment</Button>\n                            </Grid>\n                        </Grid>\n                    </FormControl>\n                    <List>\n                        {blog.comments.map(comment => (\n                            <ListItem key={comment.id}>\n                                <ListItemIcon>\n                                    <CommentIcon />\n                                </ListItemIcon>\n                                <ListItemText>\n                                    {comment.content}\n                                </ListItemText>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Grid>\n            </Grid>\n        );\n    } else {\n        return (\n            <h3>Loading...</h3>\n        );\n    }\n};\n\nexport default FullBlog;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Typography, Container, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinkIcon from '@material-ui/icons/Link';\n\nconst useStlyes = makeStyles({\n    listItem: {\n        width: '100%'\n    },\n    container: {\n        textAlign: 'center'\n    },\n    list: {\n        width: '60%',\n        margin: '0 auto'\n    }\n});\n\n\nconst Userblogs = ({ userId }) => {\n    const classes = useStlyes();\n    const user = useSelector(state => state.users.find(user => {\n        if (user.id === userId) {\n            return user;\n        }\n    }));\n    if (user) {\n        return (\n            <Container className={classes.container}>\n                <Typography component='h2' variant='h2' className={classes.header}>\n                    {user.name[user.name.length - 1] === 's' ? `${user.name}' Blogs` : `${user.name}'s Blogs`}\n                </Typography>\n                <List className={classes.list}>\n                    {\n                        user.blogs.length === 0\n                            ? <Typography container='h3' varaint='h3'>The user has not added any blogs yet</Typography>\n                            : user.blogs.map(blog => {\n                                return (\n                                    <ListItem button className={classes.listItem} key={blog.id} component={RouterLink} to={`/blogs/${blog.id}`}>\n                                        <ListItemIcon>\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText>\n                                            {blog.title}\n                                        </ListItemText>\n                                    </ListItem>\n                                );\n                            })\n                    }\n                </List>\n            </Container>\n        );\n    } else {\n        return <h2>Loading ...</h2>;\n    }\n};\n\nexport default Userblogs;","import axios from 'axios';\nconst baseUrl = '/api/login';\n\n\nconst login = async (username, password) => {\n    const res = await axios.post(baseUrl, { username, password });\n    return res.data;\n};\n\n\n\nexport default { login } //eslint-disable-line","import loginService from '../services/login';\nimport blogService from '../services/blogs';\nimport { createSuccessMessage, createErrorMessage } from './notificationReducer';\nimport { addDays } from 'date-fns';\n\nconst initialUser = null;\n\nexport const initializeUser = () => {\n    const user = window.localStorage.getItem('CU');\n    if (user) {\n        if (user.expiryDate <= new Date()) {\n            window.localStorage.removeItem('CU');\n            return null;\n        }\n        return {\n            type: 'SET',\n            user: JSON.parse(user)\n        };\n    } else {\n        return {\n            type: 'UNSET'\n        };\n    }\n};\n\nexport const loginAction = (username, password) => {\n    return async dispatch => {\n        try {\n            const user = await loginService.login(username, password);\n            dispatch({\n                type: 'LOGIN',\n                user\n            });\n            dispatch(createSuccessMessage(`${user.name} Successfully Logged In`));\n        } catch (err) {\n            dispatch(createErrorMessage('Wrong Username or Password.'));\n        }\n    };\n};\n\nexport const logoutAction = (name) => {\n    return dispatch => {\n        dispatch(createSuccessMessage(`${name} Successfully Logged Out.`));\n        dispatch({\n            type: 'LOGOUT'\n        });\n    };\n};\n\nconst userReducer = (state = initialUser, action) => {\n    switch (action.type) {\n    case 'LOGIN':\n        const expiryDate = addDays(new Date(), 3);\n        const userWithExpiry = { ...action.user, expiryDate };\n        window.localStorage.setItem('CU', JSON.stringify(userWithExpiry));\n        blogService.setToken(action.user.token);\n        return action.user;\n    case 'SET':\n        blogService.setToken(action.user.token);\n        return action.user;\n    case 'LOGOUT':\n        window.localStorage.removeItem('CU');\n        return null;\n    default:\n        return state;\n    }\n};\nexport default userReducer;","import React, { useState } from 'react';\nimport { loginAction } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, Link as RouterLink } from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\nconst Login = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [remember, setRemember] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleNameChange = event => setUsername(event.target.value);\n    const handlePasswordChange = event => setPassword(event.target.value);\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        dispatch(loginAction(username, password));\n    };\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form onSubmit={handleLogin} className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        value={username}\n                        onChange={handleNameChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        data-cy=\"loginButton\"\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link to=\"/register\" variant=\"body2\" component={RouterLink}>\n                                {'Don\\'t have an account? Sign Up'}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { useSelector } from 'react-redux';\nimport { Typography, Container, TableContainer, TableHead, TableRow, TableCell, TableBody, Table } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    container: {\n        margin: '0 auto',\n        width: '50%%'\n    },\n    table: {\n        width: '50%',\n        margin: '0 auto'\n    }\n});\n\n\nconst Users = () => {\n    const users = useSelector(state => state.users);\n    const classes = useStyles();\n    if (users) {\n        return (\n            <Container className={classes.container}>\n                <TableContainer className={classes.table}>\n                    <Typography variant='h3' component='h3'>Users</Typography>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>User</TableCell>\n                                <TableCell>Blogs Created</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {users.map(user => {\n                                return (\n                                    <TableRow key={user.id}>\n                                        <TableCell><Link component={RouterLink} to={`/users/${user.id}`}>{user.name}</Link></TableCell>\n                                        <TableCell>{user.blogs.length}</TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n        );\n    } else {\n        return <Typography variant='h3' component='h3'>Loading...</Typography>;\n    }\n};\n\nexport default Users;","import React from 'react';\nimport { logoutAction } from '../../reducers/userReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { Menu, MenuItem, IconButton, Typography, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    menu: {\n        marginTop: '2rem'\n    },\n    bottomBorder: {\n        borderBottom: '1px solid gray'\n    }\n});\n\nconst Logout = () => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const user = useSelector(state => state.user);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleLogout = (event) => {\n        event.preventDefault();\n        if (window.confirm('Are you sure you want to log out?')) {\n            dispatch(logoutAction(user.name));\n        }\n    };\n    const toggleMenu = event => {\n        if (anchorEl === null) {\n            setAnchorEl(event.currentTarget);\n        } else {\n            setAnchorEl(null);\n        }\n    };\n    return (\n        <div>\n            <IconButton data-cy=\"userIcon\" onClick={toggleMenu} color='inherit'>\n                <AccountCircleIcon fontSize='large'></AccountCircleIcon>\n            </IconButton>\n            <Menu open={Boolean(anchorEl)} onClose={toggleMenu} anchorEl={anchorEl} className={classes.menu}>\n                <MenuItem className={classes.bottomBorder}>\n                    <Typography component=\"p\">{user.name} Logged In</Typography>\n                </MenuItem>\n                <MenuItem component={RouterLink} to={`/users/${user.id}`}>\n                    <ListItemIcon>\n                        <PersonIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='My Page' />\n                </MenuItem>\n                <MenuItem  data-cy=\"logoutButton\" onClick={handleLogout}>\n                    <ListItemIcon>\n                        <ExitToAppIcon />\n                    </ListItemIcon>\n                    <ListItemText primary='Logout' />\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n};\n\nLogout.propTypes = {\n    user: propTypes.object,\n};\n\nexport default Logout;","import React from 'react';\nimport Logout from '../Authentication/Logout';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { AppBar, Toolbar, IconButton, List, ListItem, ListItemText, Container } from '@material-ui/core';\nimport { Home } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    navDisplayFlex: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    linkText: {\n        textDecoration: 'none',\n        textTransform: 'uppercase',\n        color: 'white'\n    },\n    displayLogout: {\n        marginLeft: 'auto',\n    },\n    appContainer: {\n        marginBottom: '0.5rem'\n    },\n    container: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    }\n});\n\nconst Navbar = () => {\n    const history = useHistory();\n    const classes = useStyles();\n    const navLinks = [\n        { 'title': 'Blogs', 'path': '/' },\n        { 'title': 'Users', 'path': '/users' }\n    ];\n    return (\n        <AppBar position='sticky' className={classes.appContainer}>\n            <Toolbar>\n                <IconButton edge='start' color='inherit' aria-label='home' onClick={() => history.push('/')} >\n                    <Home fontSize='large'></Home>\n                </IconButton>\n                <Container maxWidth={false} className={classes.container}>\n                    <List component=\"nav\" aria-labelledby='navigation' className={classes.navDisplayFlex}>\n                        {navLinks.map(link => (\n                            <Link className={classes.linkText} key={link.title} component={RouterLink} to={link.path}>\n                                <ListItem button>\n                                    <ListItemText primary={link.title} />\n                                </ListItem>\n                            </Link>\n                        ))}\n                    </List>\n                    <Logout />\n                </Container>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navbar;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Notification = () => {\n\n    const { usage, message } = useSelector(state => state.notification);\n\n    return (\n        <Snackbar open={Boolean(message)} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} autoHideDuration={5000}>\n            <Alert severity={usage}>\n                {message}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nexport default Notification;","import axios from 'axios';\nconst baseUrl = '/api/users';\n\nconst getAllUserData = async () => {\n    const response = await axios.get(baseUrl);\n    const userAndBlogCount = [];\n    response.data.forEach(user => {\n        let { name, blogs, id } = user;\n        userAndBlogCount.push({ name, blogCount: blogs.length, id });\n    });\n    return userAndBlogCount;\n};\n\nconst getUserBlogs = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`);\n    const blogs = response.data.blogs;\n    return blogs;\n};\n\nconst getUsers = async () => {\n    const response = await axios.get(`${baseUrl}`);\n    return response.data;\n};\n\nconst registerUser = async (credentials) => {\n    const response = await axios.post(baseUrl, credentials);\n    return response.data;\n};\n\nexport default { getAllUserData, getUserBlogs, getUsers, registerUser } //eslint-disable-line","import React from 'react';\nimport { Formik, Field } from 'formik';\nimport * as yup from 'yup';\nimport { TextField, Button, Container, FormHelperText } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n\nconst validationSchema = yup.object().shape({\n    name: yup.\n        string()\n        .required('name is required'),\n    username: yup\n        .string()\n        .required('username is required'),\n    password: yup\n        .string()\n        .required('password is required'),\n    confirmPassword: yup\n        .string()\n        .required('confirm password is required')\n        .oneOf([yup.ref('password'), null], 'passowrds do not match')\n});\n\nconst initialValues = {\n    name: '',\n    username: '',\n    password: '',\n    confirmPassword: ''\n};\n\nconst RegisterForm = ({ handleSubmit }) => {\n    const history = useHistory();\n    return (\n        <Formik\n            validationSchema={validationSchema}\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            enableReinitialize\n            validateOnBlur\n        >\n            {\n                ({ handleSubmit, errors, touched, values, handleChange, setFieldTouched }) => {\n                    return (\n                        <Container maxWidth=\"sm\">\n                            <FormHelperText error={Boolean(history.location.state?.message)}>{history.location.state?.message}</FormHelperText>\n                            <TextField\n                                fullWidth\n                                id=\"name\"\n                                name=\"name\"\n                                label=\"Nickname*\"\n                                type=\"text\"\n                                placeholder=\"Nickname\"\n                                value={values.name}\n                                onChange={handleChange}\n                                error={touched.name && Boolean(errors.name)}\n                                helperText={touched.name && errors.name}\n                                onBlur={() => setFieldTouched('name')}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                            />\n                            <TextField\n                                fullWidth\n                                id=\"username\"\n                                name=\"username\"\n                                label=\"Username*\"\n                                type=\"text\"\n                                placeholder=\"Username\"\n                                value={values.username}\n                                onChange={handleChange}\n                                error={touched.username && Boolean(errors.username)}\n                                helperText={touched.username && errors.username}\n                                onBlur={() => setFieldTouched('username')}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                            />\n                            <TextField\n                                fullWidth\n                                id=\"password\"\n                                name=\"password\"\n                                label=\"Password*\"\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                error={touched.password && Boolean(errors.password)}\n                                helperText={touched.password && errors.password}\n                                onBlur={() => setFieldTouched('password')}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                            />\n                            <TextField\n                                fullWidth\n                                id=\"confirmPassword\"\n                                name=\"confirmPassword\"\n                                label=\"Confirm Password*\"\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                value={values.confirmPassword}\n                                onChange={handleChange}\n                                error={touched.confirmPassword && Boolean(errors.confirmPassword)}\n                                helperText={touched.confirmPassword && errors.confirmPassword}\n                                onBlur={() => setFieldTouched('confirmPassword')}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                            />\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleSubmit} fullWidth>Sign Up</Button>\n                        </Container>\n                    );\n                }\n            }\n        </Formik>\n    );\n};\n\nexport default RegisterForm;","import React from 'react';\nimport userService from '../../../services/users';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport RegisterForm from './RegisterForm';\nimport { createSuccessMessage } from '../../../reducers/notificationReducer';\n\nconst Register = () => {\n    const history = useHistory();\n    const dispath = useDispatch(createSuccessMessage);\n    const handleSubmit = async ({name, username, password}) => {\n        try {\n            await userService.registerUser({name, username, password});\n            history.push('/');\n            dispath(createSuccessMessage(`${name} Successfully Joined Listablog`));\n        } catch (error) {\n            history.push({\n                pathname: '/',\n                state: { message: 'couldn\\'t register user. try again later' }\n            });\n            console.error(error);\n        }\n    };\n\n    return (\n        <RegisterForm handleSubmit={handleSubmit} /> \n    );\n};\n\nexport default Register;","import usersService from '../services/users';\nconst initialState = [];\n\nexport const getAllUsers = () => {\n    return async dispatch => {\n        const users = await usersService.getUsers();\n        dispatch({\n            type: 'INIT_USERS',\n            users\n        });\n    };\n};\n\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n    case 'INIT_USERS':\n        return action.users;\n    default:\n        return state;\n    }\n};\n\nexport default usersReducer;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\n\n// NODE MODEULE IMPORTS END\n\n// COMPONENT IMPORTS\n\nimport Blogs from './components/Blog/Blogs';\nimport FullBlog from './components/Blog/FullBlog';\nimport UserBlogs from './components/User/UserBlogs';\nimport Login from './components/Authentication/Login';\nimport Users from './components/User/Users';\nimport Navbar from './components/Navbar/Navbar';\nimport Notification from './components/Notification/Notification';\nimport Register from './components/Authentication/register';\n\n// COMPONENT IMPORTS END\n\n// REDUCER IMPORTS\n\nimport { initializeBlogsAction } from './reducers/blogsReducer';\nimport { initializeUser } from './reducers/userReducer';\nimport { getAllUsers } from './reducers/usersReducer';\n\n// REDUCER IMPORTS END\n\n\nconst App = () => {\n\n    const dispatch = useDispatch();\n\n    const user = useSelector(state => state.user);\n    const blogs = useSelector(state => {\n        const sortedState = state.blogs.sort((a, b) => {\n            return b.likes - a.likes;\n        });\n        return sortedState;\n    });\n\n    useEffect(() => {\n        dispatch(initializeBlogsAction());\n        dispatch(getAllUsers());\n        dispatch(initializeUser());\n    }, []) //eslint-disable-line\n    const blogMatch = useRouteMatch('/blogs/:id');\n    const blogId = blogMatch\n        ? blogMatch.params.id\n        : null;\n    const userMatch = useRouteMatch('/users/:id');\n    const userId = userMatch\n        ? userMatch.params.id\n        : null;\n    return (\n        <Container maxWidth='xl'>\n            <Notification />\n            {\n                user === null\n                    ? (\n                        <Switch>\n                            <Route exact path='/'>\n                                <Login />\n                            </Route>\n                            <Route path='/register'>\n                                <Register />\n                            </Route>\n                        </Switch>\n                    )\n                    :\n                    (\n                        <>\n                            <Navbar />\n                            <Switch>\n                                <Route path='/blogs/:id'>\n                                    <FullBlog blogId={blogId}/>\n                                </Route>\n                                <Route path='/users/:id'>\n                                    <UserBlogs userId={userId}/>\n                                </Route>\n                                <Route path='/users'>\n                                    <Users />\n                                </Route>\n                                <Route path={['/', '/blogs']}>\n                                    <Blogs blogs={blogs} />\n                                </Route>\n                            </Switch>\n                        </>\n                    )\n            }\n        </Container>\n    );\n};\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\n\nimport blogsReducer from './reducers/blogsReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport userReducer from './reducers/userReducer';\nimport usersReducer from './reducers/usersReducer';\n\nconst combinedReducers = combineReducers({\n    blogs: blogsReducer,\n    notification: notificationReducer,\n    user: userReducer,\n    users: usersReducer\n});\n\n\nconst store = createStore(combinedReducers, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>,\n    document.getElementById('root'));"],"sourceRoot":""}